# ***********************************************************************************
# ***********************************************************************************
# ***********************************************************************************
# JVMXRay Configuration
# ***********************************************************************************
# ***********************************************************************************
# ***********************************************************************************
#

#
# Maximum wait time in ms during initialization.  This is a design consideration for
# running JVMXRay in containers and directly via unit tests. The delay is required due
# to the SecurityManager architecture, not all JVM services are available immediately.
# Services like like JDBC, JMX, and classloaders will throw exceptions if used
# prior to complete JVM initialization.  Once jvmxray is fully initialized, the
# thread completes and system is available for event processing.  Any events
# occurring prior to jvmxray initialization are lost.  Typically, these events
# are generated internally by the virtual machine.  It's thought a maximum 
# time of 45 seconds is good enough for most containers/app servers but adjust
# as necessary.
jvmxray.event.nullsecuritymanager.server.maxwait.initialization=45000

#
# jvmxray base directory.  If unspecified, base directory is
# assigned {user.home}.
jvmxray.event.nullsecuritymanager.directory=/Users/milton/

#
# jvmxray identity file.  If unspecified, identity file is located at,
# {jvmxray.event.nullsecuritymanager.directory}\jvmxrayinstanceid.properties
jvmxray.event.nullsecuritymanager.id.file=jvmxrayinstanceid.properties

#
# jvmxray spool database.  SQLite database for caching events.  Adaptors
# process events from this cache.  Ok, to start, stop, restart adaptors as
# necessary.  Events will fill the cache, when adaptor services are restored
# the cache backlog is processed, processed events are removed, and size of
# cache will shrink.  Note: it's sometimes the case that the file size does
# not immediately reflect the fact that records have been removed.  I suspect
# this is a db optimization behavior.
#jvmxray.event.nullsecuritymanager.spool.filename=jvmxrayspool.db

#
# >>>> ASSIGN THIS <<<<
# jvmxray event spool limit.  Maximum size of the spool in records.  jvmxray 
# writes events to the spool. Adaptors running as different process (from the nullsecuritymanager) 
# will process events from the spool.  If the adaptors go off line, the spool size will increase.
# If the spool limit is exceeded, jvmxray will remove the oldest events first (lowest numbered).  Any
# events over the limit may be lost.  The value of 100k is the default but depends upon how busy
# your server is and the number of events you log, recycle or outage time for adaptors, etc.
jvmxray.event.nullsecuritymanager.spool.limit=100000

#
# Aggregation adaptor file.  This file is used by the aggregation adaptor to store it's output.
# The aggregation adaptor, captures events by count in decending order.  Often events are
# fired many times so a rolled up count is sometimes useful.  An example of the output looks
# like the following,
# EVENTAGGREGATOR
# 2020-03-21 06:12:16 UTC
# ----
# 2020-03-21 06:12:16 UTC 619 1 FILE_READ checkRead(String),/Users/milton/Tomcat/apache@tomcat@9.0.31/conf/context.xml 
# 2020-03-21 06:12:16 UTC 433 1 FILE_READ checkRead(String),/Users/milton/Tomcat/apache@tomcat@9.0.31/conf/tomcat@users.xml 
# 2020-03-21 06:12:16 UTC 379 1 PERMISSION checkPermission(Permission),n=setContextClassLoader,a=,cn=java.lang.RuntimePermission 
# 2020-03-21 06:12:16 UTC 185 1 FILE_READ checkRead(String),/Users/milton/Tomcat/apache@tomcat@9.0.31/conf/web.xml 
#
#
jvmxray.adaptor.jvmxrayeventaggregator.filename=/Users/milton/jvmxraystopevents.txt

#
# Aggregation adaptor update interval.  This is the interval in seconds to update the aggregation file
# identified by, jvmxray.adaptor.jvmxrayeventaggregator.filename
jvmxray.adaptor.jvmxrayeventaggregator.fileupdateinterval=30

#
# Webhook target
# HTTP/S end-point where JVMXRay JSON events sent.
#
jvmxray.event.webhook.target=http://localhost:9123/api/echo/

#
# Filter Configuration
#
# jvmxray.filterN.stacktrace options, 
#   NONE,        No trace data, the default.
#   LIMITED,     Include limited trace data.  Ordered list of classes.
#   SOURCEPATH,  Includes LIMITED but adds class source path information. For example,
#                  jar:file:/Users/milton/.m2/repository/junit/junit/4.12/
#                  junit-4.12.jar!/org/junit/internal/runners/model/ReflectiveCallable.class
#   FULL        Stacktrace information, class, method, line number.
# ---
#
#jvmxray.filterN.events= <event1>, <event2>, ...
#jvmxray.filterN.class= <fully qualified class name>
#jvmxray.filterN.stacktrace= <NONE> | <LIMITED> | <SOURCEPATH | FULL
#jvmxray.filterN.default= <ALLOW> | <DENY>

#
# Capture file CUD operations for all files
jvmxray.filter1.events=FILE_WRITE, FILE_DELETE
jvmxray.filter1.class=org.owasp.jvmxray.filters.NullFilter
jvmxray.filter1.stacktrace=NONE
jvmxray.filter1.default=ALLOW

#
# Capture socket access.  
jvmxray.filter2.events=SOCKET_ACCEPT, SOCKET_CONNECT, SOCKET_LISTEN, SOCKET_CONNECT_WITH_CONTEXT, SOCKET_MULTICAST, SOCKET_MULTICAST_WITH_TTL
jvmxray.filter2.class=org.owasp.jvmxray.filters.NullFilter
jvmxray.filter2.stacktrace=NONE
jvmxray.filter2.default=ALLOW

#
# Capture executed process
jvmxray.filter3.events=FILE_EXECUTE 
jvmxray.filter3.class=org.owasp.jvmxray.filters.NullFilter
jvmxray.filter3.stacktrace=NONE
jvmxray.filter3.default=ALLOW

#
# Capture all package access except standard JVM packages
jvmxray.filter4.events=PACKAGE_ACCESS, PACKAGE_DEFINE
jvmxray.filter4.class=org.owasp.jvmxray.filters.StringFilter
jvmxray.filter4.stacktrace=NONE
jvmxray.filter4.default=DENY
# testing #  jvmxray.filter4.matches1=.*junit.*
jvmxray.filter4.startswith1=java.
jvmxray.filter4.startswith2=javax.
jvmxray.filter4.startswith3=org.ietf.jgss
jvmxray.filter4.startswith4=org.omg
jvmxray.filter4.startswith5=org.wc3.dom
jvmxray.filter4.startswith6=org.xml.sax
jvmxray.filter4.startswith7=sun.

#
# Capture file read operations to certain files.
# More info on patterns, https://bit.ly/2Soqfm7
jvmxray.filter5.events=FILE_READ, FILE_READ_WITH_FILEDESCRIPTOR, FILE_READ_WITH_CONTEXT
jvmxray.filter5.class=org.owasp.jvmxray.filters.StringFilter
jvmxray.filter5.stacktrace=NONE
jvmxray.filter5.default=ALLOW
# Field search criteria searches on the first field by default, 0.  Number of fields
# available to search depends on record type. Most often the first is what you want
# to search.  However, there may be reasons to search other fields like searching
# stacktraces for example.  More information on searching to come.
jvmxray.filter5.matches1.0=.*certs$

#
# Capture permission checks
jvmxray.filter6.events=PERMISSION
jvmxray.filter6.class=org.owasp.jvmxray.filters.NullFilter
jvmxray.filter6.stacktrace=NONE
jvmxray.filter6.default=ALLOW